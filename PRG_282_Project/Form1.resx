<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SsECxR9X/d/wp6zX5yIv+XO3NMrgaxAbs/GIujG0P7cE5dEAR9y/88yfDSEFbvjOyRJhSciAcAWSLD21
        PzWi1kykbXQKfe4NXpp69pq/1u946eA39HfFn8yS3oyh6i/X1Sv0f0WYp74MKtx/jcUmPsch9elcV4G8
        X/CnlnB7x3fo+FO8tOJPrhc7SVv+vFawiBzfdzK8gb2U+Asv8n0eHdCWbcOf/B8RR4EM0sGNsQLW/Klu
        wwyzzpOvNxaQ/4sbd9sCzAVrIvZs3bAEq4gvA0l4wV+v+PRKD1Md0eUwJTFlCCLq/k/8yf8F1l7JD1Pp
        iT8UoCzw7VSQV/yp7sBtgmSg57Bsa/7sPGHWaF2Jzmdg/5c1Jj5HuhD0F35hC0O94wV/7ZPpVBRpmJKw
        j+6GoR7l2vKnM/D5WfpDXge3PwH+0r7hV/z1OktKJgR6Dmv+JJcm6w9HlmbIBlUgPIGPJPpXG3Elm84l
        pND2FX/aw8ep9CL+qSS4G5yLEGLOT/wPDnjv9Cw+zMEupYAIEa7Cv3aqzy1/BT2GHjUB7oY/juPo+5Cz
        vvgZ0j5GUQKvav5VBlmT+Ljm0jz+C/x1nA3V1OCTxyTWQyJQEog54bOKWPq8PIc/gq0b/kYCJUPIiHcL
        u2GsTRTXUI2/FuXqDCk/zR/zIf7QZ/m0kVCvI5zeauAQISjWF8ZvQoCLVerIHMJPkHhtWrVjgnSkBp+m
        5Zs+pKor826f7tEj/HjAD0Ir+bgcZqpegFJOhG+dFkUxf9B+9ByBBiT4XSYfAjwKT5qdBotUBgFkPRfr
        X2JZZf8ZNH/97e/B8rf8/zh/sBB/l3+QD+PA4+gWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYW
        FhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFr8Oh8P/AbBDBwaI45G+AAAAAElFTkSu
        QmCC
</value>
  </data>
</root>